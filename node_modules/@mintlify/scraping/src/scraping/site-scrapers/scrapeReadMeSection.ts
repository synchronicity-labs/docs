import { Navigation, NavigationEntry } from '@mintlify/models';
import cheerio from 'cheerio';

import downloadLogoImage from '../downloadLogoImage.js';
import { scrapeGettingFileNameFromUrl } from '../scrapeGettingFileNameFromUrl.js';
import getLinksRecursively from './links-per-group/getLinksRecursively.js';
import { scrapeReadMePage } from './scrapeReadMePage.js';

export async function scrapeReadMeSection(
  html: string,
  origin: string,
  cliDir: string,
  imageBaseDir: string,
  overwrite: boolean,
  version: string | undefined
): Promise<NavigationEntry[]> {
  const $ = cheerio.load(html);

  // Download the logo
  const logoSrc = $('.rm-Logo-img').first().attr('src');
  downloadLogoImage(logoSrc, imageBaseDir, origin, overwrite).catch(console.error);

  // Get all the navigation sections, but only from the first
  // sidebar found. There are multiple in the HTML for mobile
  // responsiveness but they all have the same links.
  const navigationSections = $('.rm-Sidebar').first().find('.rm-Sidebar-section');

  const groupsConfig: Navigation = navigationSections.toArray().map((s: cheerio.Element) => {
    const section = $(s);
    const sectionTitle = section.find('h3').first().text();

    // Get all links, then use filter to remove duplicates.
    // There are duplicates because of nested navigation, eg:
    // subgroupTitle -> /first-page
    // -- First Page -> /first-page   ** DUPLICATE **
    // -- Second Page -> /second-page
    const linkSections = section.find('.rm-Sidebar-list').first().children();
    const pages = getLinksRecursively(linkSections, $).filter(
      (value: string, index: number, self: any) => self.indexOf(value) === index
    );

    // Follows the same structure as mint.json
    return {
      group: sectionTitle,
      pages: pages,
    };
  });

  // Scrape each link in the navigation.
  return Promise.all(
    groupsConfig.map(async (navEntry: NavigationEntry) => {
      return await scrapeGettingFileNameFromUrl(
        // ReadMe requires a directory on all sections whereas we use root.
        // /docs is their default directory so we remove it
        navEntry,
        cliDir,
        origin,
        overwrite,
        scrapeReadMePage,
        false,
        version,
        '/docs'
      );
    })
  );
}
